(function(b){if("object"==typeof exports&&"undefined"!=typeof module)module.exports=b();else if("function"==typeof define&&define.amd)define([],b);else{var d;d="undefined"==typeof window?"undefined"==typeof global?"undefined"==typeof self?this:self:global:window,d.getCronString=b()}})(function(){return function(){function j(k,l,m){function q(w,x){if(!l[w]){if(!k[w]){var y="function"==typeof require&&require;if(!x&&y)return y(w,!0);if(s)return s(w,!0);var z=new Error("Cannot find module '"+w+"'");throw z.code="MODULE_NOT_FOUND",z}var A=l[w]={exports:{}};k[w][0].call(A.exports,function(B){var C=k[w][1][B];return q(C||B)},A,A.exports,j,k,l,m)}return l[w].exports}for(var s="function"==typeof require&&require,v=0;v<m.length;v++)q(m[v]);return q}return j}()({1:[function(){},{}],2:[function(j,k){"use strict";function m(L,M,N){let O=q(L);switch(O){case"frequencyWith":return E(L,M,N);break;case"frequencyOnly":return D(L,M,N);break;case"clockTime":return B(L,M,N);break;case"day":return C(L,M,N);break;case"minute":return H(L,M,N);break;case"hour":return F(L,M,N);break;case"month":return G(L,M,N);break;case"year":return K(L,M,N);break;case"rangeStart":return I(L,M,N);break;case"rangeEnd":return J(L,M,N);}return!0}function q(L){let M="decideState";for(let N in s){let O=new RegExp(s[N].regextest,"ig");if(O.test(L)){M=N;break}}return M}const s=j("./maps").regexString;var v=j("./maps").defaultFlags,w=j("./maps").defaultResultCron,x=j("./maps").flags,y=j("./maps").resultCron,z=j("readline");const A=j("./tokens").tokenizeInput,B=j("./states/clocktime").getClockTime,C=j("./states/day").getDay,D=j("./states/frequency").getFrequencyOnly,E=j("./states/frequency").getFrequencyWith,F=j("./states/hour").getHour,G=j("./states/month").getMonth,H=j("./states/minute").getMinute,I=j("./states/range").rangeStartState,J=j("./states/range").rangeEndState,K=j("./states/year").getYear;k.exports=function(M,N){N="undefined"==typeof N?"MIN HOR DOM MON WEK YER":N,x.isRangeForDay=v.isRangeForDay,x.isRangeForMonth=v.isRangeForMonth,x.isRangeForYear=v.isRangeForYear,x.isRangeForHour=v.isRangeForHour,x.isRangeForMin=v.isRangeForMin,y.min=w.min,y.hour=w.hour,y.day_of_month=w.day_of_month,y.month=w.month,y.day_of_week=w.day_of_week,y.year=w.year;let O=[],P="",Q=A(M);null==Q&&(P+="Please enter human readable rules !\n");let R=!0;for(let S=0;R&&S<Q.length;S++)R=m(Q[S],O,P);return!1==R?"ERROR:"+P+"\t\t"+N.replace("MIN",y.min).replace("HOR",y.hour).replace("DOM",y.day_of_month).replace("MON",y.month).replace("WEK",y.day_of_week).replace("YER",y.year):N.replace("MIN",y.min).replace("HOR",y.hour).replace("DOM",y.day_of_month).replace("MON",y.month).replace("WEK",y.day_of_week).replace("YER",y.year)}},{"./maps":3,"./states/clocktime":4,"./states/day":5,"./states/frequency":6,"./states/hour":7,"./states/minute":8,"./states/month":9,"./states/range":10,"./states/year":11,"./tokens":12,readline:1}],3:[function(j,k){"use strict";var q={isRangeForDay:!1,isRangeForMonth:!1,isRangeForYear:!1,isRangeForHour:!1,isRangeForMin:!1},s={min:"*",hour:"*",day_of_month:"*",month:"*",day_of_week:"?",year:"*"},v={isRangeForDay:q.isRangeForDay,isRangeForMonth:q.isRangeForMonth,isRangeForYear:q.isRangeForYear,isRangeForHour:q.isRangeForHour,isRangeForMin:q.isRangeForMin},w={min:s.min,hour:s.hour,day_of_month:s.day_of_month,month:s.month,day_of_week:s.day_of_week,year:s.year};k.exports={regexString:{every:{regextest:"^(every|each|all|entire)$"},clockTime:{regextest:"^([0-9]+:)?[0-9]+ *(AM|PM)$|^([0-9]+:[0-9]+)$|(noon|midnight)",regexexec:["^[0-9]+",":[0-9]+","pm","am","(noon|midnight)"]},year:{regextest:"((years|year)|([0-9]{4}[0-9]*(( ?and)?,? ?))+)",regexexec:["^(years|year)$","[0-9]*","^[0-9]{4}$"]},frequencyWith:{regextest:"^[0-9]+(th|nd|rd|st)$"},frequencyOnly:{regextest:"^[0-9]+$",regexexec:"^[0-9]+"},minute:{regextest:"(minutes|minute|mins|min)",regexexec:["^(minutes|minute|mins|min)$"]},hour:{regextest:"(hour|hrs|hours)",regexexec:["^(hour|hrs|hours)$"]},day:{regextest:"^((days|day)|(((monday|tuesday|wednesday|thursday|friday|saturday|sunday|WEEKEND|MON|TUE|WED|THU|FRI|SAT|SUN)( ?and)?,? ?)+))$",regexexec:["^(day|days)$","(MON|TUE|WED|THU|FRI|SAT|SUN|WEEKEND)"]},month:{regextest:"^((months|month)|(((january|february|march|april|may|june|july|august|september|october|november|december|JAN|FEB|MAR|APR|MAY|JUN|JUL|AUG|SEPT|OCT|NOV|DEC)( ?and)?,? ?)+))$",regexexec:["^(month|months)$","(JAN|FEB|MAR|APR|MAY|JUN|JUL|AUG|SEPT|OCT|NOV|DEC)"]},rangeStart:{regextest:"(between|starting|start)"},rangeEnd:{regextest:"(to|through|ending|end|and)"},tokenising:{regexexec:"(hour|hrs|hours)|(minutes|minute|mins|min)|((months|month)|(((january|february|march|april|may|june|july|august|september|october|november|december|JAN|FEB|MAR|APR|MAY|JUN|JUL|AUG|SEPT|OCT|NOV|DEC)( ?and)?,? ?)+))|[0-9]+(th|nd|rd|st)|(([0-9]+:)?[0-9]+( +)?(AM|PM))|([0-9]+:[0-9]+)|(noon|midnight)|((days|day)|(((monday|tuesday|wednesday|thursday|friday|saturday|sunday|WEEKEND|MON|TUE|WED|THU|FRI|SAT|SUN)( ?and)?,? ?)+))|(([0-9]{4}[0-9]*(( ?and)?,? ?))+)|([0-9]+)|(to|through|ending|end|and)|(between|starting|start)"}},defaultFlags:q,defaultResultCron:s,flags:v,resultCron:w}},{}],4:[function(j,k){"use strict";const q=j("../maps").regexString;var s=j("../maps").flags,v=j("../maps").resultCron;k.exports={getClockTime:function(w,x,y){let B,C,z=new RegExp(q.clockTime.regexexec[0]),A=w.match(z);if(B=null!=A&&0<A.length?parseInt(A[0]):0,z=new RegExp(q.clockTime.regexexec[1]),A=z.exec(w),!(null!=A&&0<A.length))C=0;else if(-1==A[0].indexOf(":"))C=0;else if(C=parseInt(A[0].slice(A[0].indexOf(":")+1)),60<=C)return y+=" please enter correct minutes !",!1;let D=new RegExp(q.clockTime.regexexec[2],"ig"),E=new RegExp(q.clockTime.regexexec[3],"ig");if(D.test(w)){if(12>B)B+=12;else if(12<B)return y+=" please correct the time before PM !",!1;}else if(E.test(w))if(12==B)B=0;else if(12<B)return y+=" please correct the time before AM !",!1;z=new RegExp(q.clockTime.regexexec[4],"ig"),z.test(w)&&(A=w.match(z),"noon"==A?(B=12,C=0):(B=0,C=0));let F=x[x.length-1];if(null!=F){if(!0==s.isRangeForHour||!0==s.isRangeForMin)return y+=" already set for range expressions, seperate into two crons!",!1;if("rangeStart"==F.ownerState)return F.hour.start=B,F.min.start=C,x.pop(),x.push(F),!0;if("rangeEnd"==F.ownerState){return F.hour==B?(F.min.end=C,v.min=F.min.start+"-"+F.min.end,!0):(F.hour.end=B,v.hour=F.hour.start+"-"+F.hour.end,!0)}}let G={ownerState:"clockTime",hour:B,min:C};return v.min=C,"*"!=v.hour&&""!=v.hour?v.hour+=","+B:v.hour=B,x.push(G),!0}}},{"../maps":3}],5:[function(j,k){"use strict";const q=j("../maps").regexString;var s=j("../maps").flags,v=j("../maps").resultCron;k.exports={getDay:function(w,x,y){let z=new RegExp(q.day.regexexec[0],"ig"),A="";if(z.test(w)){let C=x[x.length-1];v.day_of_week="?",null==C?C={frequency:"*"}:"frequencyOnly"==C.ownerState?(v.day_of_month="0/"+C.frequency,x.pop()):"frequencyWith"==C.ownerState?(v.day_of_month=""+C.frequency,x.pop()):v.day_of_month="*"}else{z=new RegExp(q.day.regexexec[1],"ig");let C=w.match(z);if(null!=C&&0!=C.length){v.day_of_week="";for(let E=0;E<C.length;E++)C[E]=C[E].toUpperCase();let D=x[x.length-1];if(1==C.length&&null!=D){if(!0==s.isRangeForDay)return y+=" already set for range expressions, seperate into two crons!",!1;if(x.pop(),"rangeStart"==D.ownerState)return D.day.start=C[0],x.push(D),!0;if("rangeEnd"==D.ownerState)return D.day.end=C[0],v.day_of_week=D.day.start+"-"+D.day.end,v.day_of_month="?",!0}C.includes("MON")&&!v.day_of_week.includes("MON")&&(v.day_of_week+="MON,"),C.includes("TUE")&&!v.day_of_week.includes("TUE")&&(v.day_of_week+="TUE,"),C.includes("WED")&&!v.day_of_week.includes("WED")&&(v.day_of_week+="WED,"),C.includes("THU")&&!v.day_of_week.includes("THU")&&(v.day_of_week+="THU,"),C.includes("FRI")&&!v.day_of_week.includes("FRI")&&(v.day_of_week+="FRI,"),C.includes("SAT")&&!v.day_of_week.includes("SAT")&&(v.day_of_week+="SAT,"),C.includes("SUN")&&!v.day_of_week.includes("SUN")&&(v.day_of_week+="SUN,"),C.includes("WEEKEND")&&!v.day_of_week.includes("SAT")&&(v.day_of_week+="SAT,"),C.includes("WEEKEND")&&!v.day_of_week.includes("SUN")&&(v.day_of_week+="SUN,"),v.day_of_week=v.day_of_week.slice(0,-1),v.day_of_month="?",A=""+v.day_of_week}else return y+=" In unresolved state at 2;Day !",!1}let B={ownerState:"day",day_of_week:v.day_of_week,day_of_month:v.day_of_month};return x.push(B),!0}}},{"../maps":3}],6:[function(j,k){"use strict";const s=j("../maps").regexString;var v=j("../maps").flags,w=j("../maps").resultCron;k.exports={getFrequencyOnly:function(x,y,z){let A=parseInt(x);if(isNaN(x))return z+=" token is not number in frequency only !",!1;if(0<y.length&&"rangeEnd"==y[y.length-1].ownerState){let C=y[y.length-1];return y.pop(),C.frequency.end=A,y.push(C),!0}if(0<y.length&&"rangeStart"==y[y.length-1].ownerState){let C=y[y.length-1];return y.pop(),C.frequency.start=A,y.push(C),!0}return y.push({ownerState:"frequencyOnly",frequency:A}),!0},getFrequencyWith:function(x,y,z){let A=new RegExp(s.frequencyOnly.regexexec,"ig"),B=A.exec(x),C=parseInt(B);if(isNaN(C))return z+=" token is not number in frequency with !",!1;if(0!=y.length&&"rangeEnd"==y[y.length-1].ownerState){let E=y[y.length-1];return y.pop(),E.frequency.end=""+C,y.push(E),!0}if(0<y.length&&"rangeStart"==y[y.length-1].ownerState){let E=y[y.length-1];return y.pop(),E.frequency.start=""+C,y.push(E),!0}return y.push({ownerState:"frequencyWith",frequency:C}),!0}}},{"../maps":3}],7:[function(j,k){"use strict";const q=j("../maps").regexString;var s=j("../maps").flags,v=j("../maps").resultCron;k.exports={getHour:function(w,x,y){let A,z=new RegExp(q.hour.regexexec[0],"ig");if(z.test(w)){let C=x[x.length-1];if(null==C)C={frequency:"*"};else if("frequencyOnly"==C.ownerState)A=C.frequency,v.hour="0/"+C.frequency,x.pop();else if("frequencyWith"==C.ownerState)"*"!=v.hour&&""!=v.hour?v.hour+=","+C.frequency:v.hour=""+C.frequency,A=v.hour,x.pop();else{if(!0==s.isRangeForHour)return y+=" already set for range expressions, seperate into two crons!",!1;if("rangeStart"==C.ownerState)return C.hour.start=C.frequency.start,C.frequency.start="",x.pop(),x.push(C),!0;if("rangeEnd"==C.ownerState)return x.pop(),C.hour.start=C.frequency.start,C.hour.end=C.frequency.end,C.frequency.end="",v.hour=C.hour.start+"-"+C.hour.end,!0}}let B={ownerState:"hour",hour:A};return x.push(B),!0}}},{"../maps":3}],8:[function(j,k){"use strict";const q=j("../maps").regexString;var s=j("../maps").flags,v=j("../maps").resultCron;k.exports={getMinute:function(w,x,y){let A,z=new RegExp(q.minute.regexexec[0],"ig");if(z.test(w)){let C=x[x.length-1];if(null==C)C={frequency:"*"};else if("frequencyOnly"==C.ownerState)A=C.frequency,v.min="0/"+C.frequency,x.pop();else if("frequencyWith"==C.ownerState)A=C.frequency,v.min=""+C.frequency,x.pop();else{if(!0==s.isRangeForMinute)return y+=" already set for range expressions, seperate into two crons!",!1;if("rangeStart"==C.ownerState)return C.min.start=C.frequency.start,C.frequency.start="",x.pop(),x.push(C),!0;if("rangeEnd"==C.ownerState)return x.pop(),C.min.start=C.frequency.start,C.min.end=C.frequency.end,C.frequency.end="",v.min=C.min.start+"-"+C.min.end,!0}}let B={ownerState:"minute",min:A};return x.push(B),!0}}},{"../maps":3}],9:[function(j,k){"use strict";const q=j("../maps").regexString;var s=j("../maps").flags,v=j("../maps").resultCron;k.exports={getMonth:function(w,x,y){let z=new RegExp(q.month.regexexec[0],"ig"),A="";if(z.test(w)){let C=x[x.length-1];null==C&&(C={frequency:"*"}),"frequencyOnly"==C.ownerState?(v.month="0/"+C.frequency,x.pop()):"frequencyWith"==C.ownerState?(v.month=""+C.frequency,x.pop()):v.month="*"}else{z=new RegExp(q.month.regexexec[1],"ig");let C=w.match(z);if(null!=C&&0!=C.length){v.month="";for(let E=0;E<C.length;E++)C[E]=C[E].toUpperCase();let D=x[x.length-1];if(1==C.length&&null!=D){if(!0==s.isRangeForMonth)return y+=" already set for range expressions, seperate into two crons!",!1;if(x.pop(),"frequencyOnly"==D.ownerState)v.day_of_month=D.frequency;else if("frequencyWith"==D.ownerState)v.day_of_month=D.frequency;else{if("rangeStart"==D.ownerState)return D.month.start=C[0],x.push(D),!0;if("rangeEnd"==D.ownerState)return""!=D.frequency.end&&(v.day_of_week="?",v.day_of_month=D.frequency.start+"-"+D.frequency.end),D.month.end=C[0],v.month=D.month.start+"-"+D.month.end,!0}}C.includes("JAN")&&!v.month.includes("JAN")&&(v.month+="JAN,"),C.includes("FEB")&&!v.month.includes("FEB")&&(v.month+="FEB,"),C.includes("MAR")&&!v.month.includes("MAR")&&(v.month+="MAR,"),C.includes("APR")&&!v.month.includes("APR")&&(v.month+="APR,"),C.includes("MAY")&&!v.month.includes("MAY")&&(v.month+="MAY,"),C.includes("JUN")&&!v.month.includes("JUN")&&(v.month+="JUN,"),C.includes("JUL")&&!v.month.includes("JUL")&&(v.month+="JUL,"),C.includes("AUG")&&!v.month.includes("AUG")&&(v.month+="AUG,"),C.includes("SEPT")&&!v.month.includes("SEPT")&&(v.month+="SEPT,"),C.includes("OCT")&&!v.month.includes("OCT")&&(v.month+="OCT,"),C.includes("NOV")&&!v.month.includes("NOV")&&(v.month+="NOV,"),C.includes("DEC")&&!v.month.includes("DEC")&&(v.month+="DEC,"),v.month=v.month.slice(0,-1),A=""+v.month}else return y+=" In unresolved state at 2;Month !",!1}let B={ownerState:"month",month:v.month};return x.push(B),!0}}},{"../maps":3}],10:[function(j,k){"use strict";j("../maps").regexString;var v=j("../maps").flags,w=j("../maps").resultCron;k.exports={rangeStartState:function(x,y,z){if(v.isRangeForDay||v.isRangeForMin||v.isRangeForMonth||v.isRangeForYear||v.isRangeForHour)return z+=" already range expressions !",!1;return y.push({ownerState:"rangeStart",min:{start:"",end:""},hour:{start:"",end:""},day:{start:"",end:""},month:{start:"",end:""},year:{start:"",end:""},frequency:{start:"",end:""}}),!0},rangeEndState:function(x,y){let A={ownerState:"rangeEnd",min:{start:"",end:""},hour:{start:"",end:""},day:{start:"",end:""},month:{start:"",end:""},year:{start:"",end:""},frequency:{start:"",end:""}},B=y[y.length-1];if(null!=B)switch(B.ownerState){case"frequencyWith":case"frequencyOnly":y.pop(),A.frequency.start=B.frequency,A.ownerState="rangeEnd",y.push(A);break;case"clockTime":y.pop(),A.hour.start=B.hour,A.min.start=B.min,A.ownerState="rangeEnd",y.push(A);break;case"rangeStart":y.pop(),B.ownerState="rangeEnd",y.push(B);break;case"month":y.pop(),A.ownerState="rangeEnd",A.month.start=B.month,y.push(A);break;case"minute":y.pop(),A.ownerState="rangeEnd",A.frequency.start=A.min.start=B.min,y.push(A);break;case"hour":y.pop(),A.ownerState="rangeEnd",A.frequency.start=A.hour.start=B.hour,y.push(A);break;case"day":y.pop(),A.ownerState="rangeEnd",A.day.start=B.day_of_week,y.push(A);break;case"year":y.pop(),A.ownerState="rangeEnd",A.year.start=B.year,y.push(A);}return!0}}},{"../maps":3}],11:[function(j,k){"use strict";const q=j("../maps").regexString;var s=j("../maps").flags,v=j("../maps").resultCron;k.exports={getYear:function(w,x,y){let z=new RegExp(q.year.regexexec[0],"ig"),A="";if(z.test(w)){let C=x[x.length-1];v.year="?",null==C?C={frequency:"*"}:"frequencyOnly"==C.ownerState?(v.year="0/"+C.frequency,x.pop()):"frequencyWith"==C.ownerState?(v.year=""+C.frequency,x.pop()):v.year="*"}else{z=new RegExp(q.year.regexexec[1],"ig");let C=new RegExp(q.year.regexexec[2],"ig"),D=w.match(z),E=new Set;for(let G=0;G<D.length;G++)C.test(D[G])&&E.add(D[G].match(C)[0]);let F=x[x.length-1];if(1==E.size&&null!=F){if(!0==s.isRangeForYear)return y+=" Cannot handle multiple range expressions, seperate into two crons!",!1;if("rangeStart"==F.ownerState)return F.year.start=Array.from(E)[0],x.pop(),x.push(F),!0;if("rangeEnd"==F.ownerState)return F.year.end=Array.from(E)[0],x.pop(),v.year=F.year.start+"-"+F.year.end,!0}if(0!=E.size)v.year="",E.forEach(function(G){v.year+=G+","}),v.year=v.year.slice(0,-1),A=""+v.year;else return y+=" In unresolved state at 2;year !",!1}let B={ownerState:"year",year:v.year};return x.push(B),!0}}},{"../maps":3}],12:[function(j,k){"use strict";const m=j("./maps").regexString;var q=j("./maps").flags,s=j("./maps").resultCron;k.exports={tokenizeInput:function(v){let w=new RegExp(m.tokenising.regexexec,"ig"),x=v.match(w);if(null==x||0==x.length)return[];for(let y=0;y<x.length;y++)x[y]=(x[y]+"").trim();return x}}},{"./maps":3}]},{},[2])(2)});
