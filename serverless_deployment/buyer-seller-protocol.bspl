protocol BuyerSeller{
    $\msf{roles}$ Buyer, Merchant, Shipping
    $\msf{parameters}$ out buyerID, out orderID key, out buyerName, out itemName
    private out merchantID, 
    out trackingID,
    out isCancelled,
    out merchantAccept,
    out merchantReject,
    out cancelledRefund,
    out defectiveRefund,
    out shippingAddress,
    out itemPrice,
    out deliveryConfirmation,
    out defectFound,
    out paymentDone,
    out shippingStatus,
    out receivedDate,
    out quote,
    out remindMessage,
    out onHold,
    out refundForRejectedOrder,
    out buyerAccept,
    out buyerReject

    Buyer $\mapsto$ Merchant: requestQuote[out buyerID, out orderID, out itemName, out buyerName, out merchantID]
    Buyer $\mapsto$ Merchant: acceptQuote[in orderID, in buyerID, in quote, out buyerAccept]
    Buyer $\mapsto$ Merchant: rejectQuote[in orderID, in buyerID, in quote, out buyerReject]
    Buyer $\mapsto$ Merchant: placeOrder[in buyerID, in orderID, in itemName, in buyerName, out shippingAddress]
    Buyer $\mapsto$ Merchant: submitPayment[in buyerID, in orderID, in itemName, out itemPrice, out paymentDone]
    Buyer $\mapsto$ Merchant: cancelOrder[in buyerID, in orderID, out isCancelled]
    Buyer $\mapsto$ Shipping: deliveryConfirmation[in buyerID, in merchantID, in orderID, in itemName, out receivedDate]

    Merchant $\mapsto$ Buyer: sendQuote[in buyerID, in orderID, in itemName, in buyerName, out quote]
    Merchant $\mapsto$ Buyer: notifyBuyerAboutPendingPayment[in buyerID, in orderID, in itemName, in buyerName, out onHold]
    Merchant $\mapsto$ Buyer: acceptOrder[in buyerID, in orderID, in itemName, in itemPrice, in shippingAddress, out merchantAccept]
    Merchant $\mapsto$ Buyer: rejectOrder[in buyerID, in orderID, in itemName, in itemPrice, in shippingAddress, out merchantReject]
    Merchant $\mapsto$ Shipping: sendToShipping[in buyerID, in merchantID, in orderID, in buyerName, in itemName, in shippingAddress, in merchantAccept]
    Merchant $\mapsto$ Buyer: notifyBuyerAboutShipping[in buyerID, in orderID, in trackingID, out shippingStatus]
    Merchant $\mapsto$ Buyer: notifyDefectiveItem[in buyerID, in orderID, in itemName, in defectFound]
    Merchant $\mapsto$ Buyer: doRefundForCancelledOrder[in buyerID, in orderID, in itemPrice, in isCancelled, out cancelledRefund]
    Merchant $\mapsto$ Buyer: doRefundForDefectiveItem[in buyerID, in orderID, in itemPrice, in defectFound, out defectiveRefund]
    Merchant $\mapsto$ Buyer: doRefundForRejectedItem[in buyerID, in orderID, in itemPrice, in merchantReject, out refundForRejectedOrder]
    Merchant $\mapsto$ Buyer: remindBuyer[in buyerID, in orderID, in trackingID, in deliveryConfirmation, out remindMessage]

    Shipping $\mapsto$ Buyer: packAndShipItem[in buyerID, in merchantID, in orderID, in itemName, in shippingAddress]
    Shipping $\mapsto$ Merchant: provideTrackingInfo[in merchantID, in buyerID, in orderID, out trackingID]
    Shipping $\mapsto$ Merchant: reportDefectiveItem[in merchantID, in orderID, in itemName, out defectFound]
    Shipping $\mapsto$ Merchant: sendDeliveryConfirmation[in merchantID, in buyerID, in orderID, in trackingID, in receivedDate, out deliveryConfirmation]
}