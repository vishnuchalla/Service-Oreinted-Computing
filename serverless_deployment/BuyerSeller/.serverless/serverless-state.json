{
  "service": {
    "service": "sls-pos",
    "serviceObject": {
      "name": "sls-pos"
    },
    "provider": {
      "name": "aws",
      "runtime": "python3.8",
      "timeout": 900,
      "stage": "dev",
      "environment": {
        "IS_OFFLINE": "false",
        "CONFIG": "configuration-dev.yml"
      },
      "iamRoleStatements": [
        {
          "Effect": "Allow",
          "Action": [
            "dynamodb:Query",
            "dynamodb:Scan",
            "dynamodb:GetItem",
            "dynamodb:PutItem",
            "dynamodb:UpdateItem",
            "dynamodb:DeleteItem",
            "dynamodb:ListStreams"
          ],
          "Resource": [
            {
              "Fn::GetAtt": [
                "ordersTable",
                "Arn"
              ]
            },
            {
              "Fn::GetAtt": [
                "buyerHistory",
                "Arn"
              ]
            },
            {
              "Fn::GetAtt": [
                "merchantHistory",
                "Arn"
              ]
            },
            {
              "Fn::GetAtt": [
                "shippingHistory",
                "Arn"
              ]
            }
          ]
        }
      ],
      "region": "us-east-1",
      "versionFunctions": true,
      "compiledCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            }
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          },
          "OrderLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/sls-pos-dev-order"
            }
          },
          "PoDashtriggerLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/sls-pos-dev-po-trigger"
            }
          },
          "BuyerLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/sls-pos-dev-buyer"
            }
          },
          "MerchantLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/sls-pos-dev-merchant"
            }
          },
          "ShippingLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/sls-pos-dev-shipping"
            }
          },
          "IamRoleLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "sls-pos",
                        "dev",
                        "lambda"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogStream",
                          "logs:CreateLogGroup"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/sls-pos-dev*:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:PutLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/sls-pos-dev*:*:*"
                          }
                        ]
                      },
                      {
                        "$ref": "$[\"service\"][\"provider\"][\"iamRoleStatements\"][0]"
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "dynamodb:GetRecords",
                          "dynamodb:GetShardIterator",
                          "dynamodb:DescribeStream",
                          "dynamodb:ListStreams"
                        ],
                        "Resource": [
                          {
                            "Fn::GetAtt": [
                              "ordersTable",
                              "StreamArn"
                            ]
                          }
                        ]
                      }
                    ]
                  }
                }
              ],
              "Path": "/",
              "RoleName": {
                "Fn::Join": [
                  "-",
                  [
                    "sls-pos",
                    "dev",
                    {
                      "Ref": "AWS::Region"
                    },
                    "lambdaRole"
                  ]
                ]
              }
            }
          },
          "OrderLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/sls-pos/dev/1637527682634-2021-11-21T20:48:02.634Z/order.zip"
              },
              "Handler": "order/handler.writeToDynamo",
              "Runtime": "python3.8",
              "FunctionName": "sls-pos-dev-order",
              "MemorySize": 1024,
              "Timeout": 900,
              "Environment": {
                "Variables": {
                  "IS_OFFLINE": "false",
                  "CONFIG": "configuration-dev.yml"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "OrderLogGroup"
            ]
          },
          "PoDashtriggerLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/sls-pos/dev/1637527682634-2021-11-21T20:48:02.634Z/po-trigger.zip"
              },
              "Handler": "buyer/buyer.handle_order",
              "Runtime": "python3.8",
              "FunctionName": "sls-pos-dev-po-trigger",
              "MemorySize": 1024,
              "Timeout": 900,
              "Environment": {
                "Variables": {
                  "IS_OFFLINE": "false",
                  "CONFIG": "configuration-dev.yml"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Layers": [
                "arn:aws:lambda:us-east-1:655663872991:layer:deps:4",
                "arn:aws:lambda:us-east-1:655663872991:layer:PosAdapterLayer:1"
              ]
            },
            "DependsOn": [
              "PoDashtriggerLogGroup"
            ]
          },
          "BuyerLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/sls-pos/dev/1637527682634-2021-11-21T20:48:02.634Z/buyer.zip"
              },
              "Handler": "buyer/buyer.lambda_handler",
              "Runtime": "python3.8",
              "FunctionName": "sls-pos-dev-buyer",
              "MemorySize": 1024,
              "Timeout": 900,
              "Environment": {
                "Variables": {
                  "IS_OFFLINE": "false",
                  "CONFIG": "configuration-dev.yml"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Layers": [
                "arn:aws:lambda:us-east-1:655663872991:layer:deps:4",
                "arn:aws:lambda:us-east-1:655663872991:layer:PosAdapterLayer:1"
              ]
            },
            "DependsOn": [
              "BuyerLogGroup"
            ]
          },
          "MerchantLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/sls-pos/dev/1637527682634-2021-11-21T20:48:02.634Z/merchant.zip"
              },
              "Handler": "merchant/merchant.lambda_handler",
              "Runtime": "python3.8",
              "FunctionName": "sls-pos-dev-merchant",
              "MemorySize": 1024,
              "Timeout": 900,
              "Environment": {
                "Variables": {
                  "IS_OFFLINE": "false",
                  "CONFIG": "configuration-dev.yml"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Layers": [
                "arn:aws:lambda:us-east-1:655663872991:layer:deps:4",
                "arn:aws:lambda:us-east-1:655663872991:layer:PosAdapterLayer:1"
              ]
            },
            "DependsOn": [
              "MerchantLogGroup"
            ]
          },
          "ShippingLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/sls-pos/dev/1637527682634-2021-11-21T20:48:02.634Z/shipping.zip"
              },
              "Handler": "shipping/shipping.lambda_handler",
              "Runtime": "python3.8",
              "FunctionName": "sls-pos-dev-shipping",
              "MemorySize": 1024,
              "Timeout": 900,
              "Environment": {
                "Variables": {
                  "IS_OFFLINE": "false",
                  "CONFIG": "configuration-dev.yml"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Layers": [
                "arn:aws:lambda:us-east-1:655663872991:layer:deps:4",
                "arn:aws:lambda:us-east-1:655663872991:layer:PosAdapterLayer:1"
              ]
            },
            "DependsOn": [
              "ShippingLogGroup"
            ]
          },
          "OrderLambdaVersionBIRR6egffjG6TP6StwNf4eeP4QJVeQXXyCUorHG40": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "OrderLambdaFunction"
              },
              "CodeSha256": "J5FXk/kHax9Kp5WoYRETqAZeNlpd7lctM629sKt5KAI="
            }
          },
          "PoDashtriggerLambdaVersionku1hjlEzORKsnMllrpDnbygttgZ3H4szQ0CdfMVCNYU": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "PoDashtriggerLambdaFunction"
              },
              "CodeSha256": "LkiIfrMMpyh3Mvzi9HnpbcRkTD03D+c5Gfc/dKoaooY="
            }
          },
          "BuyerLambdaVersion3QPfl7cHB104jy9SjdW5RC3PS1nMGibdzxJBQil4DM": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "BuyerLambdaFunction"
              },
              "CodeSha256": "LkiIfrMMpyh3Mvzi9HnpbcRkTD03D+c5Gfc/dKoaooY="
            }
          },
          "MerchantLambdaVersionA3HodY0AsvoFdbMGbq9WFeue8D8jBbDZ0ai9oDXkk": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "MerchantLambdaFunction"
              },
              "CodeSha256": "OyLdHwf/X/GgGSWiB6t8ku5Cy08rIMhiG83St0jmpx4="
            }
          },
          "ShippingLambdaVersionPxCcz2trinUih0xLFVJyApdROanHknxG24vrp9Fx3c": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "ShippingLambdaFunction"
              },
              "CodeSha256": "2adJEzbQKvVL+XS4q/s6+yqPaKXy+4gC5J9PNX0RQxw="
            }
          },
          "PoDashtriggerEventSourceMappingDynamodbOrdersTable": {
            "Type": "AWS::Lambda::EventSourceMapping",
            "DependsOn": [
              "IamRoleLambdaExecution"
            ],
            "Properties": {
              "BatchSize": 10,
              "Enabled": true,
              "EventSourceArn": {
                "Fn::GetAtt": [
                  "ordersTable",
                  "StreamArn"
                ]
              },
              "FunctionName": {
                "Fn::GetAtt": [
                  "PoDashtriggerLambdaFunction",
                  "Arn"
                ]
              },
              "StartingPosition": "TRIM_HORIZON"
            }
          },
          "HttpApi": {
            "Type": "AWS::ApiGatewayV2::Api",
            "Properties": {
              "Name": "dev-sls-pos",
              "ProtocolType": "HTTP"
            }
          },
          "HttpApiStage": {
            "Type": "AWS::ApiGatewayV2::Stage",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "StageName": "$default",
              "AutoDeploy": true,
              "DefaultRouteSettings": {
                "DetailedMetricsEnabled": false
              }
            }
          },
          "OrderLambdaPermissionHttpApi": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "OrderLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "HttpApi"
                    },
                    "/*"
                  ]
                ]
              }
            }
          },
          "HttpApiIntegrationOrder": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"OrderLambdaPermissionHttpApi\"][\"Properties\"][\"FunctionName\"]"
              },
              "PayloadFormatVersion": "2.0",
              "TimeoutInMillis": 30000
            }
          },
          "HttpApiRoutePostOrders": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "RouteKey": "POST /orders",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "HttpApiIntegrationOrder"
                    }
                  ]
                ]
              }
            },
            "DependsOn": "HttpApiIntegrationOrder"
          },
          "BuyerLambdaPermissionHttpApi": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "BuyerLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "HttpApi"
                    },
                    "/*"
                  ]
                ]
              }
            }
          },
          "HttpApiIntegrationBuyer": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"BuyerLambdaPermissionHttpApi\"][\"Properties\"][\"FunctionName\"]"
              },
              "PayloadFormatVersion": "2.0",
              "TimeoutInMillis": 30000
            }
          },
          "HttpApiRoutePostBuyerMessages": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "RouteKey": "POST /buyer/messages",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "HttpApiIntegrationBuyer"
                    }
                  ]
                ]
              }
            },
            "DependsOn": "HttpApiIntegrationBuyer"
          },
          "MerchantLambdaPermissionHttpApi": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "MerchantLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "HttpApi"
                    },
                    "/*"
                  ]
                ]
              }
            }
          },
          "HttpApiIntegrationMerchant": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"MerchantLambdaPermissionHttpApi\"][\"Properties\"][\"FunctionName\"]"
              },
              "PayloadFormatVersion": "2.0",
              "TimeoutInMillis": 30000
            }
          },
          "HttpApiRoutePostMerchantMessages": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "RouteKey": "POST /merchant/messages",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "HttpApiIntegrationMerchant"
                    }
                  ]
                ]
              }
            },
            "DependsOn": "HttpApiIntegrationMerchant"
          },
          "ShippingLambdaPermissionHttpApi": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "ShippingLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "HttpApi"
                    },
                    "/*"
                  ]
                ]
              }
            }
          },
          "HttpApiIntegrationShipping": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"ShippingLambdaPermissionHttpApi\"][\"Properties\"][\"FunctionName\"]"
              },
              "PayloadFormatVersion": "2.0",
              "TimeoutInMillis": 30000
            }
          },
          "HttpApiRoutePostShippingMessages": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "RouteKey": "POST /shipping/messages",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "HttpApiIntegrationShipping"
                    }
                  ]
                ]
              }
            },
            "DependsOn": "HttpApiIntegrationShipping"
          },
          "ordersTable": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
              "TableName": "Orders",
              "AttributeDefinitions": [
                {
                  "AttributeName": "orderID",
                  "AttributeType": "N"
                }
              ],
              "KeySchema": [
                {
                  "AttributeName": "orderID",
                  "KeyType": "HASH"
                }
              ],
              "ProvisionedThroughput": {
                "ReadCapacityUnits": 1,
                "WriteCapacityUnits": 1
              },
              "StreamSpecification": {
                "StreamViewType": "NEW_IMAGE"
              }
            }
          },
          "buyerHistory": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
              "TableName": "BuyerHistory",
              "AttributeDefinitions": [
                {
                  "AttributeName": "orderID",
                  "AttributeType": "N"
                },
                {
                  "AttributeName": "_time",
                  "AttributeType": "S"
                }
              ],
              "KeySchema": [
                {
                  "AttributeName": "orderID",
                  "KeyType": "HASH"
                },
                {
                  "AttributeName": "_time",
                  "KeyType": "RANGE"
                }
              ],
              "ProvisionedThroughput": {
                "ReadCapacityUnits": 1,
                "WriteCapacityUnits": 1
              }
            }
          },
          "merchantHistory": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
              "TableName": "MerchantHistory",
              "AttributeDefinitions": [
                {
                  "AttributeName": "orderID",
                  "AttributeType": "N"
                },
                {
                  "AttributeName": "_time",
                  "AttributeType": "S"
                }
              ],
              "KeySchema": [
                {
                  "AttributeName": "orderID",
                  "KeyType": "HASH"
                },
                {
                  "AttributeName": "_time",
                  "KeyType": "RANGE"
                }
              ],
              "ProvisionedThroughput": {
                "ReadCapacityUnits": 1,
                "WriteCapacityUnits": 1
              }
            }
          },
          "shippingHistory": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
              "TableName": "ShippingHistory",
              "AttributeDefinitions": [
                {
                  "AttributeName": "orderID",
                  "AttributeType": "N"
                },
                {
                  "AttributeName": "_time",
                  "AttributeType": "S"
                }
              ],
              "KeySchema": [
                {
                  "AttributeName": "orderID",
                  "KeyType": "HASH"
                },
                {
                  "AttributeName": "_time",
                  "KeyType": "RANGE"
                }
              ],
              "ProvisionedThroughput": {
                "ReadCapacityUnits": 1,
                "WriteCapacityUnits": 1
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            },
            "Export": {
              "Name": "sls-sls-pos-dev-ServerlessDeploymentBucketName"
            }
          },
          "OrderLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "OrderLambdaVersionBIRR6egffjG6TP6StwNf4eeP4QJVeQXXyCUorHG40"
            },
            "Export": {
              "Name": "sls-sls-pos-dev-OrderLambdaFunctionQualifiedArn"
            }
          },
          "PoDashtriggerLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "PoDashtriggerLambdaVersionku1hjlEzORKsnMllrpDnbygttgZ3H4szQ0CdfMVCNYU"
            },
            "Export": {
              "Name": "sls-sls-pos-dev-PoDashtriggerLambdaFunctionQualifiedArn"
            }
          },
          "BuyerLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "BuyerLambdaVersion3QPfl7cHB104jy9SjdW5RC3PS1nMGibdzxJBQil4DM"
            },
            "Export": {
              "Name": "sls-sls-pos-dev-BuyerLambdaFunctionQualifiedArn"
            }
          },
          "MerchantLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "MerchantLambdaVersionA3HodY0AsvoFdbMGbq9WFeue8D8jBbDZ0ai9oDXkk"
            },
            "Export": {
              "Name": "sls-sls-pos-dev-MerchantLambdaFunctionQualifiedArn"
            }
          },
          "ShippingLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "ShippingLambdaVersionPxCcz2trinUih0xLFVJyApdROanHknxG24vrp9Fx3c"
            },
            "Export": {
              "Name": "sls-sls-pos-dev-ShippingLambdaFunctionQualifiedArn"
            }
          },
          "HttpApiId": {
            "Description": "Id of the HTTP API",
            "Value": {
              "Ref": "HttpApi"
            },
            "Export": {
              "Name": "sls-sls-pos-dev-HttpApiId"
            }
          },
          "HttpApiUrl": {
            "Description": "URL of the HTTP API",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "https://",
                  {
                    "Ref": "HttpApi"
                  },
                  ".execute-api.",
                  {
                    "Ref": "AWS::Region"
                  },
                  ".",
                  {
                    "Ref": "AWS::URLSuffix"
                  }
                ]
              ]
            },
            "Export": {
              "Name": "sls-sls-pos-dev-HttpApiUrl"
            }
          }
        }
      },
      "coreCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            }
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            }
          }
        }
      },
      "vpc": {}
    },
    "custom": {
      "stages": [
        "dev",
        "local"
      ],
      "isOffline": {
        "dev": false,
        "local": true
      },
      "config": {
        "dev": "configuration-dev.yml",
        "local": "configuration-local.yml"
      },
      "dynamodb": {
        "stages": [
          "local"
        ],
        "start": {
          "port": 8000,
          "inMemory": true,
          "heapInitial": "200m",
          "heapMax": "1g",
          "migrate": true,
          "seed": true,
          "convertEmptyValues": true
        }
      }
    },
    "plugins": [
      "serverless-python-requirements",
      "serverless-dynamodb-local",
      "serverless-offline"
    ],
    "pluginsData": {},
    "functions": {
      "order": {
        "handler": "order/handler.writeToDynamo",
        "events": [
          {
            "httpApi": "POST /orders",
            "resolvedMethod": "POST",
            "resolvedPath": "/orders"
          }
        ],
        "package": {
          "include": [
            "order/**"
          ],
          "artifact": "/Users/vishnuchalla/SOC/Assignment3/BuyerSeller/.serverless/order.zip"
        },
        "name": "sls-pos-dev-order",
        "module": ".",
        "memory": 1024,
        "timeout": 900,
        "runtime": "python3.8",
        "vpc": {},
        "versionLogicalId": "OrderLambdaVersionBIRR6egffjG6TP6StwNf4eeP4QJVeQXXyCUorHG40"
      },
      "po-trigger": {
        "handler": "buyer/buyer.handle_order",
        "events": [
          {
            "stream": {
              "type": "dynamodb",
              "arn": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"IamRoleLambdaExecution\"][\"Properties\"][\"Policies\"][0][\"PolicyDocument\"][\"Statement\"][3][\"Resource\"][0]"
              }
            }
          }
        ],
        "package": {
          "include": [
            "buyer/**",
            "buyer-seller-protocol.json",
            "configuration-dev.yml"
          ],
          "artifact": "/Users/vishnuchalla/SOC/Assignment3/BuyerSeller/.serverless/po-trigger.zip"
        },
        "layers": {
          "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"PoDashtriggerLambdaFunction\"][\"Properties\"][\"Layers\"]"
        },
        "name": "sls-pos-dev-po-trigger",
        "module": ".",
        "memory": 1024,
        "timeout": 900,
        "runtime": "python3.8",
        "vpc": {},
        "versionLogicalId": "PoDashtriggerLambdaVersionku1hjlEzORKsnMllrpDnbygttgZ3H4szQ0CdfMVCNYU"
      },
      "buyer": {
        "handler": "buyer/buyer.lambda_handler",
        "events": [
          {
            "httpApi": "POST /buyer/messages",
            "resolvedMethod": "POST",
            "resolvedPath": "/buyer/messages"
          }
        ],
        "package": {
          "include": [
            "buyer/**",
            "buyer-seller-protocol.json",
            "configuration-dev.yml"
          ],
          "artifact": "/Users/vishnuchalla/SOC/Assignment3/BuyerSeller/.serverless/buyer.zip"
        },
        "layers": {
          "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"BuyerLambdaFunction\"][\"Properties\"][\"Layers\"]"
        },
        "name": "sls-pos-dev-buyer",
        "module": ".",
        "memory": 1024,
        "timeout": 900,
        "runtime": "python3.8",
        "vpc": {},
        "versionLogicalId": "BuyerLambdaVersion3QPfl7cHB104jy9SjdW5RC3PS1nMGibdzxJBQil4DM"
      },
      "merchant": {
        "handler": "merchant/merchant.lambda_handler",
        "events": [
          {
            "httpApi": "POST /merchant/messages",
            "resolvedMethod": "POST",
            "resolvedPath": "/merchant/messages"
          }
        ],
        "package": {
          "include": [
            "merchant/**",
            "buyer-seller-protocol.json",
            "configuration-dev.yml"
          ],
          "artifact": "/Users/vishnuchalla/SOC/Assignment3/BuyerSeller/.serverless/merchant.zip"
        },
        "layers": {
          "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"MerchantLambdaFunction\"][\"Properties\"][\"Layers\"]"
        },
        "name": "sls-pos-dev-merchant",
        "module": ".",
        "memory": 1024,
        "timeout": 900,
        "runtime": "python3.8",
        "vpc": {},
        "versionLogicalId": "MerchantLambdaVersionA3HodY0AsvoFdbMGbq9WFeue8D8jBbDZ0ai9oDXkk"
      },
      "shipping": {
        "handler": "shipping/shipping.lambda_handler",
        "events": [
          {
            "httpApi": "POST /shipping/messages",
            "resolvedMethod": "POST",
            "resolvedPath": "/shipping/messages"
          }
        ],
        "package": {
          "include": [
            "shipping/**",
            "buyer-seller-protocol.json",
            "configuration-dev.yml"
          ],
          "artifact": "/Users/vishnuchalla/SOC/Assignment3/BuyerSeller/.serverless/shipping.zip"
        },
        "layers": {
          "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"ShippingLambdaFunction\"][\"Properties\"][\"Layers\"]"
        },
        "name": "sls-pos-dev-shipping",
        "module": ".",
        "memory": 1024,
        "timeout": 900,
        "runtime": "python3.8",
        "vpc": {},
        "versionLogicalId": "ShippingLambdaVersionPxCcz2trinUih0xLFVJyApdROanHknxG24vrp9Fx3c"
      }
    },
    "resources": {
      "Resources": {
        "ordersTable": {
          "Type": "AWS::DynamoDB::Table",
          "Properties": {
            "TableName": "Orders",
            "AttributeDefinitions": [
              {
                "AttributeName": "orderID",
                "AttributeType": "N"
              }
            ],
            "KeySchema": [
              {
                "AttributeName": "orderID",
                "KeyType": "HASH"
              }
            ],
            "ProvisionedThroughput": {
              "ReadCapacityUnits": 1,
              "WriteCapacityUnits": 1
            },
            "StreamSpecification": {
              "StreamViewType": "NEW_IMAGE"
            }
          }
        },
        "buyerHistory": {
          "Type": "AWS::DynamoDB::Table",
          "Properties": {
            "TableName": "BuyerHistory",
            "AttributeDefinitions": [
              {
                "AttributeName": "orderID",
                "AttributeType": "N"
              },
              {
                "AttributeName": "_time",
                "AttributeType": "S"
              }
            ],
            "KeySchema": [
              {
                "AttributeName": "orderID",
                "KeyType": "HASH"
              },
              {
                "AttributeName": "_time",
                "KeyType": "RANGE"
              }
            ],
            "ProvisionedThroughput": {
              "ReadCapacityUnits": 1,
              "WriteCapacityUnits": 1
            }
          }
        },
        "merchantHistory": {
          "Type": "AWS::DynamoDB::Table",
          "Properties": {
            "TableName": "MerchantHistory",
            "AttributeDefinitions": [
              {
                "AttributeName": "orderID",
                "AttributeType": "N"
              },
              {
                "AttributeName": "_time",
                "AttributeType": "S"
              }
            ],
            "KeySchema": [
              {
                "AttributeName": "orderID",
                "KeyType": "HASH"
              },
              {
                "AttributeName": "_time",
                "KeyType": "RANGE"
              }
            ],
            "ProvisionedThroughput": {
              "ReadCapacityUnits": 1,
              "WriteCapacityUnits": 1
            }
          }
        },
        "shippingHistory": {
          "Type": "AWS::DynamoDB::Table",
          "Properties": {
            "TableName": "ShippingHistory",
            "AttributeDefinitions": [
              {
                "AttributeName": "orderID",
                "AttributeType": "N"
              },
              {
                "AttributeName": "_time",
                "AttributeType": "S"
              }
            ],
            "KeySchema": [
              {
                "AttributeName": "orderID",
                "KeyType": "HASH"
              },
              {
                "AttributeName": "_time",
                "KeyType": "RANGE"
              }
            ],
            "ProvisionedThroughput": {
              "ReadCapacityUnits": 1,
              "WriteCapacityUnits": 1
            }
          }
        }
      },
      "Outputs": {}
    },
    "configValidationMode": "warn",
    "serviceFilename": "serverless.yml",
    "initialServerlessConfig": {
      "service": {
        "$ref": "$[\"service\"][\"serviceObject\"]"
      },
      "provider": {
        "$ref": "$[\"service\"][\"provider\"]"
      },
      "package": {
        "individually": true,
        "exclude": [
          "**"
        ],
        "artifactDirectoryName": "serverless/sls-pos/dev/1637527682634-2021-11-21T20:48:02.634Z"
      },
      "plugins": {
        "$ref": "$[\"service\"][\"plugins\"]"
      },
      "custom": {
        "$ref": "$[\"service\"][\"custom\"]"
      },
      "functions": {
        "$ref": "$[\"service\"][\"functions\"]"
      },
      "resources": {
        "$ref": "$[\"service\"][\"resources\"]"
      }
    },
    "layers": {},
    "isDashboardMonitoringPreconfigured": false
  },
  "package": {
    "individually": true,
    "artifactDirectoryName": "serverless/sls-pos/dev/1637527682634-2021-11-21T20:48:02.634Z",
    "artifact": ""
  }
}